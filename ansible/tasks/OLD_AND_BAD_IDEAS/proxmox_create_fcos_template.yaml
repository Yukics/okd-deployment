# - name: Download and extract qcow2 to proxmox if not exists or older than 15 days
#   run_once: true
#   ansible.builtin.shell: |
#     cd /mnt/pve/{{ iso_storage }}/iso
#     #find -name "fedora-coreos.qcow2" -mtime +15 -delete
#     if [ ! -f fedora-coreos.qcow2 ]; then
#       wget {{ hostvars[loadbalancers[0].name+"."+cluster_name+"."+searchdomain]['fcos_qcow2'] }} -O fedora-coreos.qcow2.xz  
#       unxz fedora-coreos.qcow2.xz
#     fi

# - name: Download ignition bootstrap files
#   run_once: true
#   ansible.builtin.shell: |
#     rm -f /mnt/pve/{{ iso_storage }}/snippets/bootstrap_{{ item.name }}.ign
#     wget http://{{ loadbalancer }}:8000/bootstrap_{{ item.name }}.ign -O /mnt/pve/{{ iso_storage }}/snippets/bootstrap_{{ item.name }}.ign
#   args:
#     executable: /bin/bash
#   loop: "{{ bootstrap }}"

# - name: Download ignition master files
#   run_once: true
#   ansible.builtin.shell: |
#     rm -f /mnt/pve/{{ iso_storage }}/snippets/master_{{ item.name }}.ign
#     wget http://{{ loadbalancer }}:8000/master_{{ item.name }}.ign -O /mnt/pve/{{ iso_storage }}/snippets/master_{{ item.name }}.ign
#   args:
#     executable: /bin/bash
#   loop: "{{ controlplane }}"

# - name: Download ignition worker files
#   run_once: true
#   ansible.builtin.shell: |
#     rm -f /mnt/pve/{{ iso_storage }}/snippets/worker_{{ item.name }}.ign
#     wget http://{{ loadbalancer }}:8000/worker_{{ item.name }}.ign -O /mnt/pve/{{ iso_storage }}/snippets/worker_{{ item.name }}.ign
#   args:
#     executable: /bin/bash
#   loop: "{{ compute }}"

# - name: Create fedora core os template
#   when: 'item.node in inventory_hostname'
#   ansible.builtin.shell: |
#     if [[ "$(qm list | awk '{print $1}' | grep {{ item.id }})" != "{{ item.id }}" ]]; then
#       /usr/sbin/qm importdisk {{ item.id }} /mnt/pve/{{ iso_storage }}/iso/fedora-coreos.qcow2 {{ proxmox_disk_storage }} 
#       /usr/sbin/qm set {{ item.id }} --scsi0 {{ proxmox_disk_storage }}:vm-{{ item.id }}-disk-1 
#       /usr/sbin/qm resize {{ item.id }} scsi0 +40G 
#       sleep 1
#       /usr/sbin/qm template {{ item.id }}
#     fi
#   args:
#     executable: /bin/bash
#   loop: "{{ okd_template_nodes }}"

# - name: Pause for 2 minutes, wait VM to convert to template
  # ansible.builtin.pause:
  #   minutes: 2